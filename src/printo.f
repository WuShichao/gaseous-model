          SUBROUTINE PRINTO
C
      IMPLICIT REAL*8(A-H,O-Z),INTEGER(I-K,M-N),LOGICAL(L)
         INCLUDE 'compar.f'
C
       WRITE(6,100)NCOMP,NEQC,NPOSC,NADD,NEQA,NPOSA
       WRITE(6,105)NEQX,NPOSX,NG,NPOS,NJ
C
 100   FORMAT(' ',80('*'),/,
     * ' THIS PROGRAM WAS RUN WITH THE FOLLOWING PARAMETER VALUES:'
     * ,/,
     *' NUMBER OF STELLARDYNAMICAL COMPONENTS          NCOMP=',
     *  I2,/,
     *' NUMBER OF EQUATIONS PER COMPONENT               NEQC=',
     *  I2,/,
     *' NUMBER OF POSITIVE VARIABLES PER COMPONENT     NPOSC=',
     *  I2,/,
     *' NUMBER OF OTHER/ADDITIONAL COMPONENTS           NADD=',
     *  I2,/,
     *' NUMBER OF EQUATIONS PER OTHER COMPONENT         NEQA=',
     *  I2,/,
     *' NUMBER OF POSITIVE VARIABLES PER OTHER COMP.   NPOSA=',
     *  I2,/)
 105   FORMAT(
     *' NUMBER OF COMPONENT INDEP. SINGLE EQUATIONS     NEQX=',
     *  I2,/,
     *'        THEREOF FOR POSITIVE VARIABLES          NPOSX=',
     *  I2,/,
     *' TOTAL NUMBER OF EQUATIONS:                        NG=',
     *  I2,/,
     *' TOTAL NUMBER OF POSITIVE VARIABLES              NPOS=',
     *  I2,/,
     *' THE NUMBER OF GRID POINTS:                        NJ=',I4)
C
       WRITE(6,115)
       DO 125 I=1,NCOMP
       WRITE(6,116)I,I00+I,I20+I,I02+I,I10+I,I30+I,I12+I
 125   CONTINUE
       WRITE(6,119)IMR
C
       WRITE(6,135)
       DO 126 I=1,NCOMP
       WRITE(6,136)I,LEQ(I00+I),LEQ(I20+I),
     *               LEQ(I02+I),LEQ(I10+I),LEQ(I30+I),LEQ(I12+I)
 126   CONTINUE
       WRITE(6,139)LEQ(IMR)
C
 115   FORMAT(' ******VARIABLE-CODES MEAN FOLLOWING EQ. NUMBERS: **')
 116   FORMAT(' STAR  COMP. ',I2,' I00,I20,I02,I10,I30,I12=',6I5)
 119   FORMAT(' MASS VARIABLE:     IMR                    =',I5)
C
 135   FORMAT(' ******LOGICAL VARIABLES FOR SWITCH ON/OFF EQS.: ***')
 136   FORMAT(' STAR  COMP. ',I2,' I00,I20,I02,I10,I30,I12=',6L5)
 139   FORMAT(' MASS VARIABLE:     IMR                    =',L5)
*      Prepare for late insertion of central black hole
      LEHOLE=.FALSE.
      LLOSS=.FALSE.
      LELOSS=.FALSE.
*      Use global switches LEHOLE, LLOSS, LELOSS to remember initial options
      IF(LS(19).AND.TBINI.GT.0.D0)THEN
      PRINT*,'*LATE INSERTION OF CENTRAL MASSIVE BLACK HOLE AT TBINI='
      PRINT*,TBINI
      PRINT*,'*WITH TIMESTEP DECREASE AT THAT TIME OF XBIN2B='
      PRINT*,XBIN2B
      LEHOLE=.TRUE.
      IF(LS(14))PRINT*,'*LOSS CONE ACCRETION FOR LATE BLACK HOLE'
      IF(LS(14))LLOSS=.TRUE.
      IF(LS(18))PRINT*,'*LOSS CONE ENHANCEMENT (LATE) ',
     *      ' DUE TO SYSTEM ROTATION'
      IF(LS(18))LELOSS=.TRUE.
      LS(19)=.FALSE.
      LS(14)=.FALSE.
      LS(16)=.FALSE.
      LS(18)=.FALSE.
      END IF
      IF(LS(19).AND.AEXP.GT.0.D0)THEN
      PRINT*,'*EDIFFUSION ENERGY DISTRIBUTED ALSO IN THE CORE '
      PRINT*,'*FACTOR IS XBIN=',XBIN
      END IF
C         **************** OPTIONS PRINTOUT *******************
          PRINT*,' *************OPTIONS  CONTROL  OUTPUT************'
          WRITE(6,300)(I,I=1,40),(LS(J),J=1,40)
 300      FORMAT(1X,40I3,/,1X,40L3)
      IF(FVEC.GT.0.D0)PRINT*,'******CONVERGENCE CHECK FOR VECTORS'
* 
      IF(LS(1)) PRINT*,'*ENERGY GENERATION DUE TO 2-B-BINARIES'
      IF(LS(2)) PRINT*,'*ENERGY GENERATION DUE TO 3-B-BINARIES'
      IF(LS(3)) PRINT*,'*ENERGY GENERATION DUE TO STOCHASTIC 3-B-BINS.'
      IF(LS(3).AND.NCOMP.GT.1)THEN
      PRINT*,' Stochastic binaries are not yet implemented for ',
     *    ' many-component system -- STOP'
      STOP
      END IF
      IF(LS(4)) PRINT*,'*3B-INTEGRATIO OF STOCHASTIC BINARIES'
      IF(LS(4).AND..NOT.LS(3))THEN
      PRINT*,' ERROR - ATTEMPT TO INVOKE 3B-INTEGRATION'
      STOP
      END IF
      IF(LS(5)) PRINT*,' PRIMORDIAL BINARIES PRESENT'
      IF(LS(5).AND..NOT.LS(3))THEN
      PRINT*,' ERROR - ATTEMPT TO INVOKE PRIMORDIAL BINARIES'
      STOP
      END IF
      IF(LS(6)) PRINT*,'*TIME INTERPOLATION IN CHOOSE '
      IF(LS(7)) PRINT*,'*PRINT OUT IF TIMESTEP TOO LARGE'
      IF(LS(8)) PRINT*,'*NO ANISOTROPY DEPENDENCE IN EQUIPARTITION'
      IF(LS(9)) PRINT*,'*NO STELLARDYNAMICAL ENERGY FLUXES'
      IF(LS(10))PRINT*,'*READ THE INITIAL MODEL FROM THE FILE'
      IF(LS(11))PRINT*,'*TIDAL MASS AND ENERGY LOSS BY ESCAPING STARS'
      IF(LS(12))PRINT*,'*EQUIPARTITION TERMS INCLUDED'
      IF(LS(13))PRINT*,'*ISOTROPIC VERSION OF THE STELLAR EQUATIONS'
      IF(LS(15))PRINT*,'*NO RELAXATION TERMS IN I20-EQUATIONS'
*
      IF(LS(19))THEN
*
      PRINT*,'*CENTRAL STAR ACCRETING BLACK HOLE PRESENT'
      IF(LS(14))PRINT*,'**CLASSICAL LOSS CONE ACCRETION INCLUDED'
*
      IF(LS(16))THEN
      PRINT*,'**INITIAL MODEL SIGMA WITH RESPECT TO BLACK HOLE GRAVITY'
      DO 200 J=1,NCOMP
      IF(NOL(J).GT.20)PRINT*,'***COMP.',J,' INITIAL LOADED POLYTROPE '
 200  CONTINUE
      END IF
*
      IF(LS(18))PRINT*,'**LOSS CONE ENHANCEMENT DUE TO SYSTEM ROTATION'
      IF(LS(20))PRINT*,'**BLACK HOLE ORBIT SHRINKING BY GRAV. RADIATION'
*
      ELSE
      PRINT*,'*NO BLACK HOLE PRESENT - ANY OPTION 14,16,18,20 = FALSE!'
      XMHOLE=0.D0
      LS(14)=.FALSE.
      LS(16)=.FALSE.
      LS(18)=.FALSE.
      LS(20)=.FALSE.
      END IF
*
      IF(LS(21))PRINT*,'**STELLAR EVOLUTION MASS LOSS INCLUDED'
      IF(LS(17))PRINT*,'*NO U-DEPENDENT TERMS IN HYDROSTAT. EQUILIBR.'
      IF(LS(22).AND.(.NOT.LS(9)))
     * PRINT*,'*TWO STELLARDYNAMICAL FLUX EQUATIONS'
      IF((.NOT.LS(22)).AND.(.NOT.LS(9)))
     * PRINT*,'*ONE STELLARDYNAMICAL FLUX EQUATION'
      IF(LS(23))PRINT*,'*RESTRICTED PRINTS-OUTPUT IF ITER=ITMIN'
*
      IF(LS(24))PRINT*,'*FOUR-BODY INTERACTIONS FOR BINARIES'
      IF(LS(28))PRINT*,'*FOUR-BODY INTEGRATION BY QUAD'
      IF(LS(28).AND..NOT.LS(24))THEN
      PRINT*,' No QUAD without for-body interactions'
      STOP
      END IF
*
      IF(LS(30))PRINT*,'*MASS LOSS BY OUTER VELOCITY ALLOWED'
      IF(LS(30).AND.LS(31))THEN
      PRINT*,' OPTIONS 30 AND 31 ARE CONFLICTING - STOP'
      STOP
      END IF
      IF(LS(31))PRINT*,'*OUTER VELOCITY ZERO - ADIABATIC WALL'
*
      IF(LS(29))PRINT*,'*APOCENTRE CRITERION FOR STELLAR ESCAPERS'
      IF(LS(29).AND..NOT.LS(11))THEN
      PRINT*,' Apocentre Criterion without stellar escapers useless'
      STOP
      END IF
      IF(LS(25))PRINT*,'*DIAGNOSTIC RUN'
      IF(LS(26))PRINT*,'*MOVING GRID IN OPERATION'
      IF(LS(27))PRINT*,'*TIDAL CUTOFF'
C
      PRINT*,' *************END OPTIONS  OUTPUT********************'
      PRINT*,' -------------------------------------------------'
      PRINT*,' -------------> INPUT UNITS: SUNM,PC,YEAR,KM/S ...'
      PRINT*,' ------------->       IN FOLLOWING OUTPUT:        '
      IF(IUNIT.EQ.0)THEN
      PRINT*,' -------------> OUTPUT UNITS: SUNM,PC,YEAR,KM/S ...'
      UNR=PC/CUNR
      UNM=SUNM/CUNM
      UNRH=SUNM/PC**3/CUNRH
      UNU=1.D5/CUNU
      UNT=YEAR/CUNT
      UNL=SUNL/CUNL
      END IF
C
      IF(IUNIT.EQ.1)THEN
      PRINT*,' -------------> OUTPUT UNITS = CALCULATION UNITS '
      UNR=1.D0
      UNM=1.D0
      UNRH=1.D0
      UNU=1.D0
      UNT=1.D0
      UNL=1.D0
      END IF
      IF(IUNIT.EQ.2)THEN
      PRINT*,' -------------> OUTPUT UNITS: STELLAR UNITS ...'
      UNR=9.76D10*YEAR/CUNR
      UNM=2.33D2*SUNM/CUNM
      UNRH=2.33D2*SUNM/PC**3/CUNRH
      UNU=1.D5/CUNU
      UNT=9.76D5*YEAR/CUNT
      UNL=UNM/UNR*UNU**3/CUNL
      END IF
      PRINT*
      PRINT*,' -------------> EXCEPTION: WHERE MENTIONED '
      PRINT*,' -------------------------------------------------'
      PRINT*,' -----> CONVERSION OF CALCULATION UNITS TO CGS UNITS:'
      RAU=CUNR/1.5D13
C
      WRITE(6,10)CUNR,CUNM,CUNRH,CUNU,CUNT,CUNL,GRAV,CLICHT,RAU,1./RAU
 10   FORMAT('  UNIT R =',1P,D9.2,
     *'    CM;    UNIT M  =',D9.2,'       G;',
     *   /,' UNIT RHO=',D9.2,' G/CM3;         UNU=',D9.2,'    CM/S;',
     *   /,' UN. TIME=',D9.2,'   SEC;         UNL=',D9.2,'   ERG/S;',
     *   /,' GRAV(CUNITS)=',D9.2,'   ; CLIGHT(CUNITS)=',D9.2,
     *   /,'   AU=',D9.2,' CM;  AU(CUNITS)=',D9.2)
      PRINT*,' -------------> VALUES IN CGS UNITS:'
C
      WRITE(6,11)PC,SUNM,SUNR,SUNL,YEAR,XMK,SUNM/PC**3,
     *    SUNM/PC**3/YEAR,GRAV*CUNU/CUNM*CUNU*CUNR
 11   FORMAT(' PARSEC=',1P,D14.7,' SUNM=',D14.7,'     SUNR=',D14.7,
     *                           '        SUNL=',D14.7,/,
     *          '   YEAR=',D14.7,'  XMK=',D14.7,' SUNM/PC3=',D14.7,
     *                           ' SUNM/PC3/YR=',D14.7,
     *           '    GRAV=',D14.7)
C
         RETURN
         END
